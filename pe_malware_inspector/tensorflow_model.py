 

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import tensorflow as tf
import os


mycwd = os.getcwd()
folder_path=os.path.dirname(mycwd)

# Load the dataset
dataframe = pd.read_csv(folder_path+r"\\data\\features.csv", usecols=["label", "size_image", "size_code", "size_uninit", "pe_majorlink", "pe_minorlink", "pe_driver", "pe_exe", "pe_dll", "pe_char", "debug_size", "major_version", "minor_version", "iat_rva", "export_size", "check_sum", "generated_check_sum", "virtual_address", "virtual_size", "number_of_sections", "number_of_rva_and_sizes", "total_size_pe" ])
 


X=dataframe.drop(columns=['label'])
y=dataframe['label']
 


from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y,test_size=0.2, random_state=22)
X_train

 
tf.random.set_seed(22)
model=tf.keras.Sequential([
    tf.keras.layers.Dense(128,activation='relu'),
    tf.keras.layers.Dense(64,activation='relu'),
    tf.keras.layers.Dense(1,activation='sigmoid')
])

model.compile(loss=tf.keras.losses.binary_crossentropy,
              optimizer=tf.keras.optimizers.Adam(learning_rate=0.03),
              metrics=tf.keras.metrics.BinaryAccuracy(name='accuracy')
         )

 

model.fit(X_train,y_train,epochs=30)

 



